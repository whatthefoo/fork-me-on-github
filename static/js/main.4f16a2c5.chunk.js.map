{"version":3,"sources":["serviceWorker.js","app/components/ForkMeOnGithub.js","app/components/Footer.js","utils/copyToClipboardUtil.js","app/components/ButtonCopyToClipboard.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","ForkMeOnGithub","props","_props$colorBackgroun","colorBackground","_props$colorOctocat","colorOctocat","_props$repo","repo","_props$side","side","_props$text","text","_props$isDocumentatio","isDocumentation","theSide","left","right","theStyles","position","Object","objectSpread","top","react_default","a","createElement","href","className","aria-label","style","_ref","theColorBackground","validateColor","theColorOctocat","transform","width","height","viewBox","border","color","fill","aria-hidden","d","transformOrigin","svg","Footer","lib_default","emoji","lineHeight","copyToClipboard","str","el","document","value","setAttribute","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","console","log","concat","ButtonCopyToClipboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clipboard","copiedToClipboardStatus","_this$props$text","_this2","_this$props$classes","classes","onClick","getValueToClipboard","setState","setTimeout","disabled","Fragment","Component","SyntaxHighlighter","registerLanguage","js","App","app_components_ForkMeOnGithub","app_components_ButtonCopyToClipboard","light","docco","renderDocumentation","components_Footer","ReactDOM","render","src_app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iKC4DSC,SAhCQ,SAAAC,GAAS,IAAAC,EAQ1BD,EANFE,uBAF4B,IAAAD,EAEV,GAFUA,EAAAE,EAQ1BH,EALFI,oBAH4B,IAAAD,EAGb,GAHaA,EAAAE,EAQ1BL,EAJFM,YAJ4B,IAAAD,EAIrB,GAJqBA,EAAAE,EAQ1BP,EAHFQ,YAL4B,IAAAD,EAKrB,QALqBA,EAAAE,EAQ1BT,EAFFU,YAN4B,IAAAD,EAMrB,oBANqBA,EAAAE,EAQ1BX,EADFY,gBAEIC,EAAoB,SAATL,EAAmB,CAAEM,KAAM,KAAQ,CAAEC,MAAO,KACvDC,OAVwB,IAAAL,KAUM,CAAEM,SAAU,YAAfC,OAAAC,EAAA,EAAAD,CAAA,CAAgCD,SAAU,WAAYG,IAAK,KAAQP,GACpG,OACEQ,EAAAC,EAAAC,cAAA,KACEC,KAAMlB,EACNmB,UAAU,oBACVC,aAAYhB,EACZiB,MAAKT,OAAAC,EAAA,EAAAD,CAAA,GAAOF,IArDN,SAAAY,GAA2C,IAAzC1B,EAAyC0B,EAAzC1B,gBAAiBE,EAAwBwB,EAAxBxB,aAAcI,EAAUoB,EAAVpB,KACrCqB,EAAqB3B,GAAmB4B,IAAc5B,GAAmBA,EAAkB,QAC3F6B,EAAkB3B,GAAgB0B,IAAc1B,GAAgBA,EAAe,QAC/ES,EAAoB,SAATL,EAAmB,CAAEwB,UAAW,gBAAmB,GACpE,OACEX,EAAAC,EAAAC,cAAA,OACEU,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRR,MAAKT,OAAAC,EAAA,EAAAD,CAAA,CACHkB,OAAQ,IACRC,MAAON,EACPO,KAAMT,GACHhB,GAEL0B,cAAY,QAEZlB,EAAAC,EAAAC,cAAA,QACEiB,EAAE,sDAEJnB,EAAAC,EAAAC,cAAA,QACEiB,EAAE,2LACFF,KAAK,eACLX,MAAO,CACLc,gBAAiB,eAEnBhB,UAAU,aAEZJ,EAAAC,EAAAC,cAAA,QACEiB,EAAE,shBACFF,KAAK,eACLb,UAAU,eAwBXiB,CAAI,CAACxC,kBAAiBE,eAAcI,YCrD5BmC,EANA,kBACbtB,EAAAC,EAAAC,cAAA,uCAC0BF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAOuB,MAAM,mBAAmBC,WAAW,QADrE,OACkFzB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OAAOD,KAAK,sBAAzB,sBADlF,YACoKH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OAAOD,KAAK,iCAAzB,WCgBvJuB,SArBS,SAAAC,GACtB,IAAMC,EAAKC,SAAS3B,cAAc,YAClC0B,EAAGE,MAAQH,EACXC,EAAGG,aAAa,WAAY,IAC5BH,EAAGtB,MAAMV,SAAW,WACpBgC,EAAGtB,MAAMb,KAAO,UAChBoC,SAASG,KAAKC,YAAYL,GAC1B,IAAMM,EACJL,SAASM,eAAeC,WAAa,GACjCP,SAASM,eAAeE,WAAW,GAEzCT,EAAGU,SACHT,SAASU,YAAY,QACrBV,SAASG,KAAKQ,YAAYZ,GACtBM,IACFL,SAASM,eAAeM,kBACxBZ,SAASM,eAAeO,SAASR,IAEnCS,QAAQC,IAAR,sBAAAC,OAAkClB,MCqDrBmB,qBA9Db,SAAAA,EAAanE,GAAO,IAAAoE,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAAH,IAClBC,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAiD,GAAAM,KAAAH,KAAMtE,KACD0E,MAAQ,CACXC,UAAW,GACXC,yBAAyB,GAJTR,qFAOG,IAAAS,EAGjBP,KAAKtE,MADPU,YAFmB,IAAAmE,EAEZ,GAFYA,EAKrB,OADqBnE,GAAc,oCAG3B,IAAAoE,EAAAR,KAAAS,EAGJT,KAAKtE,MADPgF,eAFM,IAAAD,EAEI,GAFJA,EAKNH,EACEN,KAAKI,MADPE,wBAEF,OACEvD,EAAAC,EAAAC,cAAA,UACEE,UAAS,oBAAAyC,OAAsBc,EAAU,IAAMA,EAAU,IAAhDd,OAAqDU,EAA0B,YAAc,IACtGK,QAAW,WACTlC,EAAgB+B,EAAKI,uBACrBJ,EAAKK,SAAS,CACZR,UAAWG,EAAKI,sBAChBN,yBAAyB,IAE3BQ,WAAW,WACTN,EAAKK,SAAS,CACZP,yBAAyB,KAE1B,MAELS,SAAUT,GAEVvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACZmD,EAEGvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAOuB,MAAM,sBADf,OAEExB,EAAAC,EAAAC,cAAA,wBAGFF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAOuB,MAAM,cADf,OAEExB,EAAAC,EAAAC,cAAA,2CAjDoBgE,cCMpCC,IAAkBC,iBAAiB,aAAcC,SAuKlCC,gMAnKX,OACEtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtF,KAAK,kDACLJ,gBAAgB,MAChBE,aAAa,SACbQ,iBAAe,IAEjBS,EAAAC,EAAAC,cAACsE,EAAD,CACEnF,KAAI,oIAQNW,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAmBnE,MAAOoE,KAA1B,oIAUF1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtF,KAAK,kDACLJ,gBAAgB,QAChBE,aAAa,UACbQ,iBAAe,IAEjBS,EAAAC,EAAAC,cAACsE,EAAD,CACEnF,KAAI,uIAQNW,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAmBnE,MAAOoE,KAA1B,uIAUF1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtF,KAAK,kDACLJ,gBAAgB,OAChBE,aAAa,YACbI,KAAK,OACLI,iBAAe,IAEjBS,EAAAC,EAAAC,cAACsE,EAAD,CACEnF,KAAI,uJASNW,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAmBnE,MAAOoE,KAA1B,uJAWF1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtF,KAAK,kDACLJ,gBAAgB,SAChBE,aAAa,OACbQ,iBAAe,IAEjBS,EAAAC,EAAAC,cAACsE,EAAD,CACEnF,KAAI,qIAQNW,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAmBnE,MAAOoE,KAA1B,qIAUF1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtF,KAAK,kDACLJ,gBAAgB,QAChBE,aAAa,QACbI,KAAK,OACLI,iBAAe,IAEjBS,EAAAC,EAAAC,cAACsE,EAAD,CACEnF,KAAI,oJASNW,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAmBnE,MAAOoE,KAA1B,sLAeN,OACE1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACqE,EAAD,CAAgBtF,KAAK,oDACrBe,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAOuB,MAAM,YAAjB,4BAAyDxB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAOuB,MAAM,aACtExB,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,mBAApB,wBAAuDF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OAAOD,KAAK,mDAAzB,qBAAvD,UAA8JH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OAAOD,KAAK,4CAAzB,OAA9J,KACC8C,KAAK0B,0BAKd3E,EAAAC,EAAAC,cAAC0E,EAAD,cA/JUV,mBCVlBW,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASlD,SAASmD,eAAe,SNyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4f16a2c5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Based on the awesome https://github.com/tholman/github-corners\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport validateColor from 'validate-color';\n\n// Import styles\nimport './ForkMeOnGithub.scss'\n\nconst svg = ({colorBackground, colorOctocat, side}) => {\n  const theColorBackground = colorBackground && validateColor(colorBackground) ? colorBackground : 'black';\n  const theColorOctocat = colorOctocat && validateColor(colorOctocat) ? colorOctocat : 'white';\n  const theSide = (side === 'left') ? { transform: 'scale(-1, 1)' } : {};\n  return (\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        border: '0',\n        color: theColorOctocat,\n        fill: theColorBackground,\n        ...theSide\n      }}\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n      />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{\n          transformOrigin: '130px 106px'\n        }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  )\n};\n\nconst ForkMeOnGithub = props => {\n  const {\n    colorBackground = '',\n    colorOctocat = '',\n    repo = '',\n    side = 'right',\n    text = 'Fork me on GitHub',\n    isDocumentation = false,\n  } = props;\n  const theSide = (side === 'left') ? { left: '0' } : { right: '0' };\n  const theStyles = isDocumentation ? { position: 'relative' } : { position: 'absolute', top: '0', ...theSide };\n  return (\n    <a\n      href={repo}\n      className=\"fork-me-on-github\"\n      aria-label={text}\n      style={{ ...theStyles }}\n    >\n      {svg({colorBackground, colorOctocat, side})}\n    </a>\n  )\n}\n\nForkMeOnGithub.propTypes = {\n  colorBackground: PropTypes.string,\n  colorOctocat: PropTypes.string,\n  isDocumentation: PropTypes.bool,\n  repo: PropTypes.string.isRequired,\n  side: PropTypes.oneOf(['left', 'right']),\n  text: PropTypes.string,\n};\n\nexport default ForkMeOnGithub;\n","import React from 'react';\nimport Emoji from 'react-emojis';\n\n// Import components\n\nconst Footer = () => (\n  <footer>\n    Brought to you by &nbsp;<Emoji emoji=\"man-technologist\" lineHeight=\"1.2\"/>&nbsp;<a className=\"link\" href=\"http://sidhree.com\">Wallace Sidhrée</a>&nbsp;&amp;&nbsp;<a className=\"link\" href=\"https://github.com/whatthefoo\">WTFoo</a>\n  </footer>\n);\n\nexport default Footer;\n","// SOurce: https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n\nconst copyToClipboard = str => {\n  const el = document.createElement('textarea');  // Create a <textarea> element\n  el.value = str;                                 // Set its value to the string that you want copied\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n  const selected =\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\n      : false;                                    // Mark as false to know no selection existed before\n  el.select();                                    // Select the <textarea> content\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n  document.body.removeChild(el);                  // Remove the <textarea> element\n  if (selected) {                                 // If a selection existed before copying\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n    document.getSelection().addRange(selected);   // Restore the original selection\n  }\n  console.log(`[copyToClipboard]: ${str}`);\n}\n\nexport default copyToClipboard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Emoji from 'react-emojis';\n\n// Import utils\nimport copyToClipboard from './../../utils/copyToClipboardUtil';\n\n// Import styles\nimport './ButtonCopyToClipboard.scss';\n\nclass ButtonCopyToClipboard extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      clipboard: '',\n      copiedToClipboardStatus: false\n    }\n  }\n  getValueToClipboard () {\n    const {\n      text = ''\n    } = this.props;\n    const theClipboard = text ? text : '';\n    return theClipboard;\n  }\n  render () {\n    const {\n      classes = '',\n    } = this.props;\n    const {\n      copiedToClipboardStatus,\n    } = this.state;\n    return (\n      <button\n        className={`copy-to-clipboard${classes ? ' ' + classes : ''}${copiedToClipboardStatus ? ' disabled' : ''}`}\n        onClick = {() => {\n          copyToClipboard(this.getValueToClipboard());\n          this.setState({\n            clipboard: this.getValueToClipboard(),\n            copiedToClipboardStatus: true\n          });\n          setTimeout(() => {\n            this.setState({\n              copiedToClipboardStatus: false\n            });\n          }, 3000);\n        }}\n        disabled={copiedToClipboardStatus}\n      >\n        <div className=\"copy-to-clipboard__content\">\n          {copiedToClipboardStatus\n            ?\n              <>\n                <Emoji emoji=\"check-mark-button\"/>&nbsp;\n                <span>Copied!</span>\n              </>\n            :\n              <>\n                <Emoji emoji=\"clipboard\"/>&nbsp;\n                <span>Copy to clipboard</span>\n              </>\n          }\n        </div>\n      </button>\n    )\n  }\n}\n\nButtonCopyToClipboard.propTypes = {\n  classes: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default ButtonCopyToClipboard;\n","import React, { Component } from 'react';\nimport Emoji from 'react-emojis';\n\n// React Syntax Highlighter\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n\n// Import components\nimport ForkMeOnGithub from './components/ForkMeOnGithub';\nimport Footer from './components/Footer';\n\n// Import styles\nimport './App.scss';\nimport ButtonCopyToClipboard from './components/ButtonCopyToClipboard';\n\nSyntaxHighlighter.registerLanguage('javascript', js);\n\nclass App extends Component {\n  renderDocumentation () {\n    return (\n      <>\n        <div className=\"fork-me-on-github__item\">\n          <ForkMeOnGithub\n            repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n            colorBackground=\"red\"\n            colorOctocat=\"yellow\"\n            isDocumentation\n          />\n          <ButtonCopyToClipboard\n            text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"red\"\n  colorOctocat=\"yellow\"\n/>`\n            }\n          />\n          <SyntaxHighlighter style={docco}>\n            {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"red\"\n  colorOctocat=\"yellow\"\n/>`\n            }\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"fork-me-on-github__item\">\n          <ForkMeOnGithub\n            repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n            colorBackground=\"green\"\n            colorOctocat=\"#bada55\"\n            isDocumentation\n          />\n          <ButtonCopyToClipboard\n            text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"green\"\n  colorOctocat=\"#bada55\"\n/>`\n            }\n          />\n          <SyntaxHighlighter style={docco}>\n            {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"green\"\n  colorOctocat=\"#bada55\"\n/>`\n            }\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"fork-me-on-github__item\">\n          <ForkMeOnGithub\n            repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n            colorBackground=\"blue\"\n            colorOctocat=\"lightblue\"\n            side=\"left\"\n            isDocumentation\n          />\n          <ButtonCopyToClipboard\n            text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"blue\"\n  colorOctocat=\"lightblue\"\n  side=\"left\"\n/>`\n            }\n          />\n          <SyntaxHighlighter style={docco}>\n            {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"blue\"\n  colorOctocat=\"lightblue\"\n  side=\"left\"\n/>`\n            }\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"fork-me-on-github__item\">\n          <ForkMeOnGithub\n            repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n            colorBackground=\"purple\"\n            colorOctocat=\"pink\"\n            isDocumentation\n          />\n          <ButtonCopyToClipboard\n            text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"purple\"\n  colorOctocat=\"pink\"\n/>`\n            }\n          />\n          <SyntaxHighlighter style={docco}>\n            {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"purple\"\n  colorOctocat=\"pink\"\n/>`\n            }\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"fork-me-on-github__item\">\n          <ForkMeOnGithub\n            repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n            colorBackground=\"white\"\n            colorOctocat=\"black\"\n            side=\"left\"\n            isDocumentation\n          />\n          <ButtonCopyToClipboard\n            text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"white\"\n  colorOctocat=\"black\"\n  side=\"left\"\n/>`\n            }\n          />\n          <SyntaxHighlighter style={docco}>\n            {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"white\"\n  colorOctocat=\"black\"\n  side=\"left\"\n/>`\n            }\n          </SyntaxHighlighter>\n        </div>\n      </>\n    );\n  }\n  render () {\n    return (\n      <>\n        <div className=\"app\">\n          <ForkMeOnGithub repo=\"https://github.com/whatthefoo/fork-me-on-github\"/>\n          <div className=\"fork-me-on-github-docs\">\n            <div className=\"header\">\n              <div className=\"header__content\">\n                <h1><Emoji emoji=\"octopus\"/>&nbsp;Fork me on GitHub&nbsp;<Emoji emoji=\"octopus\"/></h1>\n                <h2>A fresher 'Fork me on GitHub' callout, now on React</h2>\n                <p>Documentation on <em>props</em> can be found at the <a className=\"link\" href=\"https://github.com/whatthefoo/fork-me-on-github\">GitHub repository</a> or at <a className=\"link\" href=\"https://www.npmjs.com/fork-me-on-github/\">npm</a>.</p>\n                {this.renderDocumentation()}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n// Import components\nimport App from './app/App';\n// Import styles\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}