{"version":3,"sources":["serviceWorker.js","app/components/ForkMeOnGithub.js","app/components/Footer.js","utils/copyToClipboardUtil.js","app/components/ButtonCopyToClipboard.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","ForkMeOnGithub","props","_props$colorBackgroun","colorBackground","_props$colorOctocat","colorOctocat","_props$repo","repo","_props$side","side","_props$text","text","_props$isDocumentatio","isDocumentation","_props$isPride","isPride","theSide","left","right","theStyles","position","Object","objectSpread","top","react_default","a","createElement","href","className","aria-label","style","_ref","theColorOctocat","validateColor","transform","Fragment","width","height","aria-hidden","focusable","id","x2","y2","offset","stopColor","viewBox","border","color","fill","d","transformOrigin","svg","Footer","lib_default","emoji","lineHeight","copyToClipboard","str","el","document","value","setAttribute","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","console","log","concat","ButtonCopyToClipboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clipboard","copiedToClipboardStatus","_this$props$text","_this2","_this$props$classes","classes","onClick","getValueToClipboard","setState","setTimeout","disabled","Component","SyntaxHighlighter","registerLanguage","js","App","_useState","useState","_useState2","slicedToArray","colorBackgroundState","setColorBackgroundState","_useState3","_useState4","colorOctocatState","setColorOctocatState","_useState5","_useState6","repoState","setRepoState","_useState7","_useState8","prideState","setPrideState","colorBackgroundIsValid","colorOctocatIsValid","repoIsValid","url","test","theString","app_components_ForkMeOnGithub","htmlFor","type","onChange","e","target","placeholder","autoComplete","checked","app_components_ButtonCopyToClipboard","light","docco","components_Footer","ReactDOM","render","src_app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a46123a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Based on the awesome https://github.com/tholman/github-corners\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport validateColor from 'validate-color';\n\n// Import styles\nimport './ForkMeOnGithub.scss';\n\nconst svg = ({isPride, colorBackground, colorOctocat, side}) => {\n  const prideGradient = () => (\n    <svg style={{ width: '0', height: '0', position: 'absolute' }} aria-hidden=\"true\" focusable=\"false\">\n      <linearGradient id=\"prideGradient\" x2=\"1\" y2=\"1\">\n        <stop offset=\"0%\" stopColor=\"#f00000\" />\n        <stop offset=\"16.67%\" stopColor=\"#f00000\" />\n        <stop offset=\"16.67%\" stopColor=\"#ff8000\" />\n        <stop offset=\"33.33%\" stopColor=\"#ff8000\" />\n        <stop offset=\"33.33%\" stopColor=\"#ffff00\" />\n        <stop offset=\"50%\" stopColor=\"#ffff00\" />\n        <stop offset=\"50%\" stopColor=\"#007940\" />\n        <stop offset=\"66.67%\" stopColor=\"#007940\" />\n        <stop offset=\"66.67%\" stopColor=\"#4040ff\" />\n        <stop offset=\"83.33%\" stopColor=\"#4040ff\" />\n        <stop offset=\"83.33%\" stopColor=\"#a000c0\" />\n        <stop offset=\"100%\" stopColor=\"#a000c0\" />\n      </linearGradient>\n    </svg>\n  );\n  const theColorBackground = () => {\n    if (isPride) {\n      return 'url(#prideGradient) #f00000';\n    } else if (colorBackground && validateColor(colorBackground)) {\n      return colorBackground;\n    }\n    return 'black';\n  }\n  const theColorOctocat = colorOctocat && validateColor(colorOctocat) ? colorOctocat : 'white';\n  const theSide = (side === 'left') ? { transform: 'scale(-1, 1)' } : {};\n  return (\n    <>\n      {isPride && prideGradient()}\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        style={{\n          border: '0',\n          color: theColorOctocat,\n          fill: theColorBackground(),\n          ...theSide\n        }}\n        aria-hidden=\"true\"\n      >\n        <path\n          d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n        />\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          style={{\n            transformOrigin: '130px 106px'\n          }}\n          className=\"octo-arm\"\n        />\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        />\n      </svg>\n    </>\n  )\n};\n\nconst ForkMeOnGithub = props => {\n  const {\n    colorBackground = '',\n    colorOctocat = '',\n    repo = '',\n    side = 'right',\n    text = 'Fork me on GitHub',\n    isDocumentation = false,\n    isPride = false,\n  } = props;\n  const theSide = (side === 'left') ? { left: '0' } : { right: '0' };\n  const theStyles = isDocumentation ? { position: 'relative' } : { position: 'absolute', top: '0', ...theSide };\n  return (\n    <a\n      href={repo}\n      className=\"fork-me-on-github\"\n      aria-label={text}\n      style={{ ...theStyles }}\n    >\n      {svg({isPride, colorBackground, colorOctocat, side})}\n    </a>\n  )\n}\n\nForkMeOnGithub.propTypes = {\n  colorBackground: PropTypes.string,\n  colorOctocat: PropTypes.string,\n  isDocumentation: PropTypes.bool,\n  isPride: PropTypes.bool,\n  repo: PropTypes.string.isRequired,\n  side: PropTypes.oneOf(['left', 'right']),\n  text: PropTypes.string,\n};\n\nexport default ForkMeOnGithub;\n","import React from 'react';\nimport Emoji from 'react-emojis';\n\n// Import components\n\nconst Footer = () => (\n  <footer>\n    Brought to you by <span className=\"credits\">&nbsp;<Emoji emoji=\"man-technologist\" lineHeight=\"1.2\"/><a className=\"link\" href=\"http://sidhree.com\">Wallace Sidhrée</a>&nbsp;&amp;&nbsp;<a className=\"link\" href=\"https://github.com/whatthefoo\">WTFoo</a></span>\n  </footer>\n);\n\nexport default Footer;\n","// SOurce: https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n\nconst copyToClipboard = str => {\n  const el = document.createElement('textarea');  // Create a <textarea> element\n  el.value = str;                                 // Set its value to the string that you want copied\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n  const selected =\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\n      : false;                                    // Mark as false to know no selection existed before\n  el.select();                                    // Select the <textarea> content\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n  document.body.removeChild(el);                  // Remove the <textarea> element\n  if (selected) {                                 // If a selection existed before copying\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n    document.getSelection().addRange(selected);   // Restore the original selection\n  }\n  console.log(`[copyToClipboard]: ${str}`);\n}\n\nexport default copyToClipboard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Emoji from 'react-emojis';\n\n// Import utils\nimport copyToClipboard from './../../utils/copyToClipboardUtil';\n\n// Import styles\nimport './ButtonCopyToClipboard.scss';\n\nclass ButtonCopyToClipboard extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      clipboard: '',\n      copiedToClipboardStatus: false\n    }\n  }\n  getValueToClipboard () {\n    const {\n      text = ''\n    } = this.props;\n    const theClipboard = text ? text : '';\n    return theClipboard;\n  }\n  render () {\n    const {\n      classes = '',\n    } = this.props;\n    const {\n      copiedToClipboardStatus,\n    } = this.state;\n    return (\n      <button\n        className={`copy-to-clipboard${classes ? ' ' + classes : ''}${copiedToClipboardStatus ? ' disabled' : ''}`}\n        onClick = {() => {\n          copyToClipboard(this.getValueToClipboard());\n          this.setState({\n            clipboard: this.getValueToClipboard(),\n            copiedToClipboardStatus: true\n          });\n          setTimeout(() => {\n            this.setState({\n              copiedToClipboardStatus: false\n            });\n          }, 3000);\n        }}\n        disabled={copiedToClipboardStatus}\n      >\n        <div className=\"copy-to-clipboard__content\">\n          {copiedToClipboardStatus\n            ?\n              <>\n                <Emoji emoji=\"check-mark-button\"/>&nbsp;\n                <span>Copied!</span>\n              </>\n            :\n              <>\n                <Emoji emoji=\"clipboard\"/>&nbsp;\n                <span>Copy to clipboard</span>\n              </>\n          }\n        </div>\n      </button>\n    )\n  }\n}\n\nButtonCopyToClipboard.propTypes = {\n  classes: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default ButtonCopyToClipboard;\n","import React, { useState } from 'react';\nimport Emoji from 'react-emojis';\nimport validateColor from 'validate-color';\n\n// React Syntax Highlighter\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n\n// Import components\nimport ForkMeOnGithub from './components/ForkMeOnGithub';\nimport Footer from './components/Footer';\n\n// Import styles\nimport './App.scss';\nimport ButtonCopyToClipboard from './components/ButtonCopyToClipboard';\n\nSyntaxHighlighter.registerLanguage('javascript', js);\n\nconst renderStaticDocumentation = () => (\n  <>\n    <div className=\"fork-me-on-github__item\">\n      <ForkMeOnGithub\n        repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n        colorBackground=\"red\"\n        colorOctocat=\"yellow\"\n        isDocumentation\n      />\n      <ButtonCopyToClipboard\n        text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"red\"\n  colorOctocat=\"yellow\"\n/>`\n        }\n      />\n      <SyntaxHighlighter style={docco}>\n        {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"red\"\n  colorOctocat=\"yellow\"\n/>`\n        }\n      </SyntaxHighlighter>\n    </div>\n    <div className=\"fork-me-on-github__item\">\n      <ForkMeOnGithub\n        repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n        colorBackground=\"green\"\n        colorOctocat=\"#bada55\"\n        isDocumentation\n      />\n      <ButtonCopyToClipboard\n        text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"green\"\n  colorOctocat=\"#bada55\"\n/>`\n        }\n      />\n      <SyntaxHighlighter style={docco}>\n        {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"green\"\n  colorOctocat=\"#bada55\"\n/>`\n        }\n      </SyntaxHighlighter>\n    </div>\n    <div className=\"fork-me-on-github__item\">\n      <ForkMeOnGithub\n        repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n        colorBackground=\"blue\"\n        colorOctocat=\"lightblue\"\n        side=\"left\"\n        isDocumentation\n      />\n      <ButtonCopyToClipboard\n        text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"blue\"\n  colorOctocat=\"lightblue\"\n  side=\"left\"\n/>`\n        }\n      />\n      <SyntaxHighlighter style={docco}>\n        {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"blue\"\n  colorOctocat=\"lightblue\"\n  side=\"left\"\n/>`\n        }\n      </SyntaxHighlighter>\n    </div>\n    <div className=\"fork-me-on-github__item\">\n      <ForkMeOnGithub\n        repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n        colorBackground=\"purple\"\n        colorOctocat=\"pink\"\n        isDocumentation\n      />\n      <ButtonCopyToClipboard\n        text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"purple\"\n  colorOctocat=\"pink\"\n/>`\n        }\n      />\n      <SyntaxHighlighter style={docco}>\n        {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"purple\"\n  colorOctocat=\"pink\"\n/>`\n        }\n      </SyntaxHighlighter>\n    </div>\n    <div className=\"fork-me-on-github__item\">\n      <ForkMeOnGithub\n        repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n        colorBackground=\"white\"\n        colorOctocat=\"black\"\n        side=\"left\"\n        isDocumentation\n      />\n      <ButtonCopyToClipboard\n        text={\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"white\"\n  colorOctocat=\"black\"\n  side=\"left\"\n/>`\n        }\n      />\n      <SyntaxHighlighter style={docco}>\n        {\n`<ForkMeOnGithub\n  repo=\"https://github.com/whatthefoo/fork-me-on-github\"\n  colorBackground=\"white\"\n  colorOctocat=\"black\"\n  side=\"left\"\n/>`\n        }\n      </SyntaxHighlighter>\n    </div>\n  </>\n);\n\nconst App = () => {\n  const [colorBackgroundState, setColorBackgroundState] = useState('');\n  const [colorOctocatState, setColorOctocatState] = useState('');\n  const [repoState, setRepoState] = useState('');\n  const [prideState, setPrideState] = useState(false);\n  const colorBackgroundIsValid = colorBackgroundState && validateColor(colorBackgroundState);\n  const colorOctocatIsValid = colorOctocatState && validateColor(colorOctocatState);\n  const repoIsValid = url => /https:\\/\\/github.com\\/([a-z0-9/\\-%@?&])+/.test(url);\n  const theString = () => (`<ForkMeOnGithub\n  repo=\"${repoIsValid(repoState) ? repoState : 'https://github.com/whatthefoo/fork-me-on-github'}\"${!prideState ? `\\n  colorBackground=\"${colorBackgroundIsValid ? colorBackgroundState : 'black'}\"` : ''}\n  colorOctocat=\"${colorOctocatIsValid ? colorOctocatState : 'white'}\"${prideState ? '\\n  isPride' : ''}\n/>`);\n  return (\n    <>\n      <div className=\"app\">\n        <ForkMeOnGithub repo=\"https://github.com/whatthefoo/fork-me-on-github\" isPride/>\n        <div className=\"fork-me-on-github-docs\">\n          <div className=\"header\">\n            <div className=\"logo-top\">\n              <Emoji emoji=\"octopus\"/>\n            </div>\n            <h1>Fork me on GitHub</h1>\n            <h2>A fresher 'Fork me on GitHub' callout, now on React</h2>\n            <p>Documentation on <em>props</em> can be found at the <a className=\"link\" href=\"https://github.com/whatthefoo/fork-me-on-github\">GitHub repository</a> or at <a className=\"link\" href=\"https://www.npmjs.com/fork-me-on-github/\">npm</a>.</p>\n            <div className=\"build-me-one-of-those\">\n              <h3>Build yours right here!</h3>\n              <div className=\"user-input\">\n                <div className=\"user-input__item\">\n                  <label htmlFor=\"repoState\" className=\"visually-hidden\">\n                    Repository\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"repoState\"\n                    onChange={e => {\n                      setRepoState(e.target.value);\n                    }}\n                    value={repoState ? repoState : ''}\n                    placeholder={repoState ? repoState : 'URL to repository'}\n                    autoComplete=\"lol\"\n                    className={`input-text${repoIsValid(repoState) ? ' valid' : repoState === '' ? '' : ' invalid'}`}\n                  />\n                  {!repoIsValid(repoState) && repoState !== '' &&\n                    <p className=\"warning\">URL to repository is not valid</p>\n                  }\n                </div>\n                <div className=\"user-input__item\">\n                  <label htmlFor=\"colorBackgroundState\" className=\"visually-hidden\">\n                    Background color\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"colorBackgroundState\"\n                    onChange={e => {\n                      setColorBackgroundState(e.target.value);\n                    }}\n                    value={colorBackgroundState ? colorBackgroundState : ''}\n                    placeholder=\"Background color\"\n                    autoComplete=\"lol\"\n                    className={`input-text${colorBackgroundIsValid ? ' valid' : colorBackgroundState === '' ? '' : ' invalid'}`}\n                  />\n                  {!colorBackgroundIsValid && colorBackgroundState !== '' &&\n                    <p className=\"warning\">Background color is not valid</p>\n                  }\n                </div>\n                <div className=\"user-input__item\">\n                  <label htmlFor=\"colorOctocatState\" className=\"visually-hidden\">\n                    Octocat color\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"colorOctocatState\"\n                    onChange={e => {\n                      setColorOctocatState(e.target.value);\n                    }}\n                    value={colorOctocatState ? colorOctocatState : ''}\n                    placeholder=\"Octocat color\"\n                    autoComplete=\"lol\"\n                    className={`input-text${colorOctocatIsValid ? ' valid' : colorOctocatState === '' ? '' : ' invalid'}`}\n                  />\n                  {!colorOctocatIsValid && colorOctocatState !== '' &&\n                    <p className=\"warning\">Octocat color is not valid</p>\n                  }\n                </div>\n              </div>\n              <div className=\"fork-me-on-github__item\">\n                <ForkMeOnGithub\n                  repo={`https://github.com/${repoState}`}\n                  colorBackground={colorBackgroundState}\n                  colorOctocat={colorOctocatState}\n                  isDocumentation\n                  isPride={prideState}\n                />\n                <div className=\"user-input__checkbox\">\n                  <label htmlFor=\"prideState\" className=\"user-input__checkbox__label\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"prideState\"\n                      onChange={() => {\n                        setPrideState(!prideState);\n                      }}\n                      checked={prideState}\n                    />&nbsp;\n                    <span style={{color: '#f00000'}}>I</span>\n                    <span style={{color: '#ff8000'}}>s</span>&nbsp;\n                    <span style={{color: '#fff700'}}>p</span>\n                    <span style={{color: '#007940'}}>r</span>\n                    <span style={{color: '#4040ff'}}>o</span>\n                    <span style={{color: '#a000c0'}}>u</span>\n                    <span style={{color: '#f00000'}}>d</span>\n                    <span style={{color: '#ff8000'}}>!</span>\n                  </label>\n                </div>\n                <ButtonCopyToClipboard\n                  text={theString()}\n                />\n                <div className=\"limited\">\n                  <SyntaxHighlighter style={docco}>\n                    {theString()}\n                  </SyntaxHighlighter>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"limited\">\n          {renderStaticDocumentation()}\n        </div>\n      </div>\n      <Footer/>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n// Import components\nimport App from './app/App';\n// Import styles\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}